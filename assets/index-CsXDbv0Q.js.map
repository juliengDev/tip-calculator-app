{"version":3,"file":"index-CsXDbv0Q.js","sources":["../../src/main.ts"],"sourcesContent":["import \"../css/style.css\";\n\n// Types\ntype InputElement = HTMLInputElement | null;\ntype ButtonElement = HTMLButtonElement | null;\ntype OutputElement = HTMLElement | null;\n\n// Selectors\nconst billInput = document.getElementById(\"bill\") as InputElement;\nconst peopleInput = document.getElementById(\"people\") as InputElement;\nconst customTipInput = document.getElementById(\"custom\") as InputElement;\nconst selectionContainer = document.querySelector(\n  \".calculator__input__selection__container\"\n) as HTMLElement;\nconst tipPerPersonOutput = document.getElementById(\n  \"tip-per-person\"\n) as OutputElement;\nconst totalPerPersonOutput = document.getElementById(\n  \"total-per-person\"\n) as OutputElement;\nconst resetButton = document.querySelector(\n  \".calculator__result__button\"\n) as ButtonElement;\nconst errorMessageElement = document.querySelector(\n  \".calculator__input__number__people-error\"\n) as HTMLElement;\n\n// Application state\ninterface CalculatorState {\n  billAmount: number;\n  tipPercentage: number;\n  numberOfPeople: number;\n}\n\nconst state: CalculatorState = {\n  billAmount: 0,\n  tipPercentage: 0,\n  numberOfPeople: 1,\n};\n\n// Utility functions\nconst parsePositiveFloat = (value: string): number =>\n  Math.max(0, parseFloat(value) || 0);\nconst parsePositiveInt = (value: string): number =>\n  Math.max(0, parseInt(value, 10) || 0);\n\n// Calculation function\nconst calculateTip = (state: CalculatorState) => {\n  const tipAmount = state.billAmount * (state.tipPercentage / 100);\n  const totalAmount = state.billAmount + tipAmount;\n  const tipPerPerson =\n    state.numberOfPeople > 0 ? tipAmount / state.numberOfPeople : 0;\n  const totalPerPerson =\n    state.numberOfPeople > 0 ? totalAmount / state.numberOfPeople : 0;\n\n  return {\n    tipPerPerson,\n    totalPerPerson,\n  };\n};\n\n// UI update function\nconst updateUI = (tipPerPerson: number, totalPerPerson: number) => {\n  if (tipPerPersonOutput) {\n    tipPerPersonOutput.textContent = `$${tipPerPerson.toFixed(2)}`;\n  }\n  if (totalPerPersonOutput) {\n    totalPerPersonOutput.textContent = `$${totalPerPerson.toFixed(2)}`;\n  }\n  updateResetButtonState();\n};\n\n// Main update function\nconst updateCalculation = (): void => {\n  const { tipPerPerson, totalPerPerson } = calculateTip(state);\n  updateUI(tipPerPerson, totalPerPerson);\n\n  console.log(`\n    Montant de la note: ${state.billAmount.toFixed(2)} $\n    Pourcentage de pourboire: ${state.tipPercentage.toFixed(2)}%\n    Nombre de personnes: ${state.numberOfPeople}\n    Pourboire par personne: ${tipPerPerson.toFixed(2)} $\n    Total par personne: ${totalPerPerson.toFixed(2)} $\n  `);\n};\n\n// Event handler functions\nconst handleBillInput = (event: Event): void => {\n  const input = event.target as InputElement;\n  state.billAmount = parsePositiveFloat(input?.value || \"0\");\n  updateCalculation();\n};\n\nconst handleTipSelection = (event: Event): void => {\n  const target = event.target as ButtonElement;\n  if (target?.tagName === \"BUTTON\" && target.textContent?.includes(\"%\")) {\n    const buttons = selectionContainer.querySelectorAll(\"button\");\n    buttons.forEach((button) => button.classList.remove(\"selected\"));\n\n    target.classList.add(\"selected\");\n    state.tipPercentage = parsePositiveFloat(\n      target.textContent.replace(\"%\", \"\")\n    );\n    if (customTipInput) customTipInput.value = \"\";\n    updateCalculation();\n  }\n};\n\nconst handleCustomTipInput = (event: Event): void => {\n  const input = event.target as InputElement;\n  const value = parsePositiveFloat(input?.value || \"0\");\n  state.tipPercentage = Math.min(100, value);\n\n  const buttons = selectionContainer.querySelectorAll(\"button\");\n  buttons.forEach((button) => button.classList.remove(\"selected\"));\n\n  updateCalculation();\n};\n\nconst handlePeopleInput = (event: Event): void => {\n  const input = event.target as InputElement;\n  const value = parsePositiveInt(input?.value || \"0\");\n  state.numberOfPeople = Math.max(0, value);\n\n  if (state.numberOfPeople === 0) {\n    errorMessageElement?.classList.remove(\"hidden\");\n    peopleInput?.classList.add(\"error\");\n  } else {\n    errorMessageElement?.classList.add(\"hidden\");\n    peopleInput?.classList.remove(\"error\");\n  }\n\n  updateCalculation();\n};\n\n// Reset function\nconst resetCalculator = (): void => {\n  // Reset state\n  state.billAmount = 0;\n  state.tipPercentage = 0;\n  state.numberOfPeople = 1;\n\n  // Reset input fields\n  if (billInput) billInput.value = \"\";\n  if (peopleInput) peopleInput.value = \"\";\n  if (customTipInput) customTipInput.value = \"\";\n\n  // Reset tip selection\n  const buttons = selectionContainer.querySelectorAll(\"button\");\n  buttons.forEach((button) => button.classList.remove(\"selected\"));\n\n  // Reset error state\n  errorMessageElement?.classList.add(\"hidden\");\n  peopleInput?.classList.remove(\"error\");\n\n  // Update UI\n  updateCalculation();\n\n  console.log(\"Calculator reset\");\n};\n\n// Update reset button state\nconst updateResetButtonState = (): void => {\n  if (resetButton) {\n    if (\n      state.billAmount > 0 ||\n      state.tipPercentage > 0 ||\n      state.numberOfPeople > 1\n    ) {\n      resetButton.classList.add(\"active\");\n    } else {\n      resetButton.classList.remove(\"active\");\n    }\n  }\n};\n\n// Event listeners\nbillInput?.addEventListener(\"input\", handleBillInput);\nselectionContainer?.addEventListener(\"click\", handleTipSelection);\ncustomTipInput?.addEventListener(\"input\", handleCustomTipInput);\npeopleInput?.addEventListener(\"input\", handlePeopleInput);\nresetButton?.addEventListener(\"click\", resetCalculator);\n\n// Initialization\nupdateCalculation();\n"],"names":["billInput","peopleInput","customTipInput","selectionContainer","tipPerPersonOutput","totalPerPersonOutput","resetButton","errorMessageElement","state","parsePositiveFloat","value","parsePositiveInt","calculateTip","tipAmount","totalAmount","tipPerPerson","totalPerPerson","updateUI","updateResetButtonState","updateCalculation","handleBillInput","event","input","handleTipSelection","target","_a","button","handleCustomTipInput","handlePeopleInput","resetCalculator"],"mappings":"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"}